# API Keys
DEVIN_API_KEY="your_devin_api_key_here"
ZEP_API_KEY="your_zep_api_key_here"
OSMOSIS_API_KEY="your_osmosis_api_key_here"
OPENROUTER_API_KEY="your_openrouter_api_key_here"

# Portkey Configuration
PORTKEY_API_BASE="https://api.portkey.ai/v1"
PORTKEY_API_KEY="your_portkey_api_key_here"
PORTKEY_VIRTUAL_KEY_GROQ="your_groq_virtual_key_here"
PORTKEY_VIRTUAL_KEY_ANTHROPIC="your_anthropic_virtual_key_here"
PORTKEY_VIRTUAL_KEY_OPENAI="your_openai_virtual_key_here"
PORTKEY_VIRTUAL_KEY_GOOGLE="your_google_virtual_key_here"


# Codign tool configuration
# Set to 'codebuff' (default) or 'claudecode' to choose the prompt execution engine
CODING_TOOL="claudecode"

# Set to 'true' to use execute_prompt or 'false' to use auto_sw_workflow for code generation
SINGLE_PROMPT_TO_CODE_TOOL="true"

# Coding Agent Configuration
CODING_AGENT_MODEL="claude-3-7-sonnet-latest"
# CODING_AGENT_MODEL="gemini-2.0-flash-thinking-exp-01-21"
# CODING_AGENT_MODEL="gemini-2.0-pro-exp-02-05"
# CODING_AGENT_MODEL="gemini-2.0-pro-exp"
# CODING_AGENT_MODEL="gemini-2.0-pro"
# CODING_AGENT_MODEL="gemini-exp-1206"
# CODING_AGENT_MODEL="gemini-flash"

# Coding Agent Settings
MAX_AGENT_STEPS=10
PLANNING_INTERVAL=3
USE_O3_PLANNING="true"
USE_CLARIFYING_QUESTIONS="false"
USE_WEB_SEARCH="false"
USE_OSMOSIS="false"
USE_ZEP="true"

# Paths
AI_PLAYGROUND_PATH="src/backend/agents/implementations/multiagent_ai_coding/ai_playground/"
TESTS_PATH="src/backend/agents/implementations/multiagent_ai_coding/tests/"
INCLUDE_CODEBASE_IN_SYSTEM_PROMPT="true"
MORE_AUTHORIZED_IMPORTS="streamlit,smolagents"

# Additional API Keys and Settings
HF_TOKEN="your_huggingface_token_here"
FIRECRAWL_KEY="your_firecrawl_key_here"
CONTEXT_SIZE="128000"
OPENAI_MODEL="o3-mini"
SERPAPI_API_KEY="your_serpapi_key_here"
AGENT_TYPE="code"

# System Prompts
MANAGER_AGENT_SYSTEM_PROMPT="You are deep research agent. You are given a question and you need to generate a detailed answer with a lot of sources.
    You have to to:
    - Use the research_tool to perform deep research on topics!
    - For general, broad questions: provide comprehensive overview answers that cover multiple aspects and perspectives of the topic with extensive sources
    - For specific, concrete questions: provide focused, precise answers that directly address the exact question with relevant sources
    - Search multiple related queries to find different perspectives and sources!
    - Cross-reference information from multiple sources to provide complete and accurate answers!
    - Don't stop at just 1-2 reseach_tool calls - aim to call it as many times as needed, minimum 2 times! In one code block you can call the research_tool as many times as needed, minimum 2 times!
    - Make sure to ALWAYS return source URLs in your answer!
    - Retain and include all relevant information provided by the tool in your answer! 
    "

CODE_WRITING_AGENT_SYSTEM_PROMPT="You are an expert Python programmer. 

When you receive a coding task:

1. Think and plan step by step according to the plan you got from the user
2. Write the initial code implementation
3. Call the code review agent to fix it using the code_review_agent tool
4. Return the final improved code to the user

ALWAYS use the code review agent to review the code

Remember to:
- Always use function calling rather than direct responses
- Only return the final code after review and improvements
- Always save the code to a file using the write_file tool

You have access to the current project's files in development through the following tools:
- read_file: Read contents of a file
- read_directory: List contents of a directory
- write_file: Write content to a file
- duckduckgo_search: Search the web for information

Critic might give you a lot of feedback, but you don't need to follow it all. Just make sure the code compiles and functions correctly.

Don't do more than 5 iterations. Just quickly finish it.

Codebase:
"

CODE_REVIEW_AGENT_SYSTEM_PROMPT="You are an expert code reviewer. Your task is to review and fix the code provided to you. Make sure the code compiles functions correctly. When you are done fixing the code, send the final code back. Don't try to do too many changes, just make sure the code compiles and functions correctly. 

Don't be too harsh, you're not making production level code, just minimal changes to get the code to work.
"

PLANNING_AGENT_SYSTEM_PROMPT="Given a coding task, generate a clear, step-by-step plan that outlines:
1. What needs to be implemented
2. The sequence of steps to implement it

Format the response as a markdown list with clear sections.

Remember to:
- Be specific and actionable
- Break down complex tasks into manageable pieces

You're not making production level code, you're just making minimal changes to get the code to work.

Word it as a prompt for an agent to follow.
"

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=app.log
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5
LOG_DIR=logs

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000,http://127.0.0.1:3000

# Working Directory
WORKING_DIR=/path/to/your/working/directory/
